<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"
	default-autowire="byName">
	
	<import resource="ReportEngine-properties.xml"/>
	
	<!-- HTTP Client -->
    <bean id="connectionManagerParams"
		class="org.apache.commons.httpclient.params.HttpConnectionManagerParams">
		<property name="connectionTimeout" value="${re.httpCon.connectionTimeout}" />
		<property name="soTimeout" value="${re.httpCon.soTimeout}" />
		<property name="maxTotalConnections" value="${re.httpCon.maxTotalConnections}" />
		<property name="defaultMaxConnectionsPerHost" value="${re.httpCon.defaultMaxConnectionsPerHost}" />
	</bean>

	<bean id="connectionManager"
		class="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager">
		<property name="params" ref="connectionManagerParams" />
	</bean>

	<bean id="httpClient" class="org.apache.commons.httpclient.HttpClient">
		<constructor-arg>
			<ref bean="connectionManager" />
		</constructor-arg>
	</bean>
	<!-- HTTP Client -->
	
	<bean id="mdxDataRetriever" class="nu.com.rill.analysis.report.excel.data.MdxDataRetriever">
	</bean>

	<bean id="jsonDataRetriever"
		class="nu.com.rill.analysis.report.excel.data.JsonDataRetriever">
	</bean>
	
	<bean id="jdbcDataRetriever" class="nu.com.rill.analysis.report.excel.data.JdbcDataRetriever">
		<property name="dbcpProperties">
			<props>
				<prop key="driverClassName">${re.jdbcData.driverClassName}</prop>
				<prop key="initialSize">${re.jdbcData.initialSize}</prop>
				<prop key="maxIdle">${re.jdbcData.maxIdle}</prop>
				<prop key="minIdle">${re.jdbcData.minIdle}</prop>
				<prop key="testOnBorrow">${re.jdbcData.testOnBorrow}</prop>
				<prop key="removeAbandoned">${re.jdbcData.removeAbandoned}</prop>
				<prop key="removeAbandonedTimeout">${re.jdbcData.removeAbandonedTimeout}</prop>
				<prop key="minEvictableIdleTimeMillis">${re.jdbcData.minEvictableIdleTimeMillis}</prop>
			</props>
		</property>
	</bean>
	
	<bean id="bookChartDecorator"
		class="nu.com.rill.analysis.report.excel.chart.BookChartDecorator">
	</bean>
	
	<bean id="pivotTableDecorator"
		class="nu.com.rill.analysis.report.excel.pivottable.BookPivottableDecorator">
	</bean>
	
	<bean id="tableDecorator"
		class="nu.com.rill.analysis.report.excel.table.TableDecorator">
	</bean>
	
	<!-- Mail Export -->
	<bean id="sendReportViaEmailHelper" class="nu.com.rill.analysis.report.excel.export.SendReportViaEmailHelper" scope="prototype"/>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>${re.mail.host}</value>
		</property>
		
		<property name="defaultEncoding" value="utf-8"></property>
	</bean>
	
	<bean id="offMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>smtp.gmail.com</value>
		</property>
		<property name="username">
			<value>totyumengr@gmail.com</value>
		</property>
		<property name="password">
			<value>interhui1025</value>
		</property>
		<property name="port">
			<value>465</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.smtp.socketFactory.fallback">false</prop>
			</props>
		</property>
		
		<property name="defaultEncoding" value="utf-8"></property>
	</bean>
	
	<bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from">
			<value>rigel.reportservice@baidu.com</value>
		</property>
		<property name="subject">
			<value> - From Rigel Report Service.</value>
		</property>
		<property name="bcc">
			<list>
				<value>mengran@baidu.com</value>
			</list>
		</property>
	</bean>
	
    <bean id="templateMailSender" class="nu.com.rill.analysis.report.excel.export.InlineMailContentMailSender">
    	<property name="offlineMode">
    		<value>${re.mail.offlineMode}</value>
    	</property>
    </bean>

    <bean id="taskExecutor" class="org.springframework.core.task.SyncTaskExecutor">
    </bean>
	 
    <bean id="emailExportServiceBean" class="nu.com.rill.analysis.report.excel.export.ViaEmailReportExportService"></bean>
    <bean class="org.springframework.remoting.rmi.RmiServiceExporter">
		<property name="serviceName" value="ViaEmailReportExportService"/>
		<property name="service" ref="emailExportServiceBean"/>
		<property name="serviceInterface" value="nu.com.rill.analysis.report.ReportExportService"/>
		<property name="registryPort" value="8110"/>
	</bean>
	
	<!-- 
	<bean name="emailExportServiceExporter"
		class="org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter">
		<property name="service" ref="emailExportService" />
		<property name="serviceInterface" value="nu.com.rill.analysis.report.ReportExportService" />
	</bean>
	
	<bean id="httpServer"
		class="org.springframework.remoting.support.SimpleHttpServerFactoryBean">
		<property name="contexts">
			<map>
				<entry key="/remoting/EmailExportService" value-ref="emailExportServiceExporter" />
			</map>
		</property>
		<property name="port" value="8110" />
	</bean>
	 -->

</beans>